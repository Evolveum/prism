/*
 * Copyright (c) 2010-2018 Evolveum and contributors
 *
 * This work is dual-licensed under the Apache License 2.0
 * and European Union Public License. See LICENSE file for details.
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2014.02.04 at 01:34:24 PM CET
//

package com.evolveum.prism.xml.ns._public.types_3;

import java.io.Serializable;
import java.util.Objects;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlType;

import com.evolveum.midpoint.prism.JaxbVisitable;
import com.evolveum.midpoint.prism.JaxbVisitor;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ExternalDataType", propOrder = {
        "provider",
        "key",
})
public class ExternalDataType implements Serializable, Cloneable, JaxbVisitable {

    protected String provider;
    protected String key;

    public String getProvider() {
        return provider;
    }

    public void setProvider(String value) {
        this.provider = value;
    }

    public String getKey() {
        return key;
    }

    public void setKey(String value) {
        this.key = value;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {return true;}
        if (o == null || getClass() != o.getClass()) {return false;}
        ExternalDataType that = (ExternalDataType) o;
        return Objects.equals(provider, that.provider) && Objects.equals(key, that.key);
    }

    @Override
    public int hashCode() {
        return Objects.hash(provider, key);
    }

    @Override
    public String toString() {
        return "ExternalDataType(provider=" + provider + ", key=" + key + ")";
    }

    @Override
    public ExternalDataType clone() {
        ExternalDataType cloned = new ExternalDataType();
        cloned.setProvider(getProvider());
        cloned.setKey(getKey());
        return cloned;
    }

    @Override
    public void accept(JaxbVisitor visitor) {
        visitor.visit(this);
    }
}
